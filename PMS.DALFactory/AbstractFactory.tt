<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ include file="EF.Utility.CS.ttinclude"#>
<#@ output extension=".cs" #>
<#
CodeGenerationTools code = new CodeGenerationTools(this);
MetadataLoader loader = new MetadataLoader(this);
CodeRegion region = new CodeRegion(this, 1);
MetadataTools ef = new MetadataTools(this);

string inputFile = @"..\\PMS.Model\\PMSEntities.edmx";

EdmItemCollection ItemCollection = loader.CreateEdmItemCollection(inputFile);
string namespaceName = code.VsNamespaceSuggestion();

EntityFrameworkTemplateFileManager fileManager = EntityFrameworkTemplateFileManager.Create(this);

#>

using System.Configuration;
using System.Reflection;
using PMS.IDAL;

namespace PMS.DALFactory
{

    public partial class AbstractFactory
    {     
		<# foreach (EntityType item in ItemCollection.GetItems<EntityType>().OrderBy(e=>e.Name))
   {   

   #> 
		#region 创建<#=item.Name#>的实例
        /// <summary>
        /// 创建<#=item.Name#>的实例
        /// </summary>
        /// <returns></returns>
        public static I<#=item.Name#>DAL Create<#=item.Name#>DAL()
        {
            //获取类的全名称：命名空间+类名
            string fullClassName = NameSpace + ".<#=item.Name#>DAL";
            return CreateInstance(fullClassName) as I<#=item.Name#>DAL;
        }
		#endregion
	<#}#>
    }
	
}