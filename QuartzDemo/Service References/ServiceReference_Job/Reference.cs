//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace QuartzDemo.ServiceReference_Job {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference_Job.IJobService")]
    public interface IJobService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobService/AddScheduleJob", ReplyAction="http://tempuri.org/IJobService/AddScheduleJobResponse")]
        bool AddScheduleJob(PMS.Model.J_JobInfo jobInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobService/AddScheduleJob", ReplyAction="http://tempuri.org/IJobService/AddScheduleJobResponse")]
        System.Threading.Tasks.Task<bool> AddScheduleJobAsync(PMS.Model.J_JobInfo jobInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobService/ResumeAllJob", ReplyAction="http://tempuri.org/IJobService/ResumeAllJobResponse")]
        void ResumeAllJob();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobService/ResumeAllJob", ReplyAction="http://tempuri.org/IJobService/ResumeAllJobResponse")]
        System.Threading.Tasks.Task ResumeAllJobAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobService/PauseJob", ReplyAction="http://tempuri.org/IJobService/PauseJobResponse")]
        void PauseJob(string jobName, string jobGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobService/PauseJob", ReplyAction="http://tempuri.org/IJobService/PauseJobResponse")]
        System.Threading.Tasks.Task PauseJobAsync(string jobName, string jobGroup);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IJobServiceChannel : QuartzDemo.ServiceReference_Job.IJobService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class JobServiceClient : System.ServiceModel.ClientBase<QuartzDemo.ServiceReference_Job.IJobService>, QuartzDemo.ServiceReference_Job.IJobService {
        
        public JobServiceClient() {
        }
        
        public JobServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public JobServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public JobServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public JobServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool AddScheduleJob(PMS.Model.J_JobInfo jobInfo) {
            return base.Channel.AddScheduleJob(jobInfo);
        }
        
        public System.Threading.Tasks.Task<bool> AddScheduleJobAsync(PMS.Model.J_JobInfo jobInfo) {
            return base.Channel.AddScheduleJobAsync(jobInfo);
        }
        
        public void ResumeAllJob() {
            base.Channel.ResumeAllJob();
        }
        
        public System.Threading.Tasks.Task ResumeAllJobAsync() {
            return base.Channel.ResumeAllJobAsync();
        }
        
        public void PauseJob(string jobName, string jobGroup) {
            base.Channel.PauseJob(jobName, jobGroup);
        }
        
        public System.Threading.Tasks.Task PauseJobAsync(string jobName, string jobGroup) {
            return base.Channel.PauseJobAsync(jobName, jobGroup);
        }
    }
}
